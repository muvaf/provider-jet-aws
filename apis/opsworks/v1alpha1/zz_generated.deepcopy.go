//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSourceObservation) DeepCopyInto(out *AppSourceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSourceObservation.
func (in *AppSourceObservation) DeepCopy() *AppSourceObservation {
	if in == nil {
		return nil
	}
	out := new(AppSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSourceParameters) DeepCopyInto(out *AppSourceParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	if in.SSHKeySecretRef != nil {
		in, out := &in.SSHKeySecretRef, &out.SSHKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSourceParameters.
func (in *AppSourceParameters) DeepCopy() *AppSourceParameters {
	if in == nil {
		return nil
	}
	out := new(AppSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Application) DeepCopyInto(out *Application) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Application.
func (in *Application) DeepCopy() *Application {
	if in == nil {
		return nil
	}
	out := new(Application)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Application) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationList) DeepCopyInto(out *ApplicationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Application, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationList.
func (in *ApplicationList) DeepCopy() *ApplicationList {
	if in == nil {
		return nil
	}
	out := new(ApplicationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationObservation) DeepCopyInto(out *ApplicationObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationObservation.
func (in *ApplicationObservation) DeepCopy() *ApplicationObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationParameters) DeepCopyInto(out *ApplicationParameters) {
	*out = *in
	if in.AppSource != nil {
		in, out := &in.AppSource, &out.AppSource
		*out = make([]AppSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoBundleOnDeploy != nil {
		in, out := &in.AutoBundleOnDeploy, &out.AutoBundleOnDeploy
		*out = new(string)
		**out = **in
	}
	if in.AwsFlowRubySettings != nil {
		in, out := &in.AwsFlowRubySettings, &out.AwsFlowRubySettings
		*out = new(string)
		**out = **in
	}
	if in.DataSourceArn != nil {
		in, out := &in.DataSourceArn, &out.DataSourceArn
		*out = new(string)
		**out = **in
	}
	if in.DataSourceDatabaseName != nil {
		in, out := &in.DataSourceDatabaseName, &out.DataSourceDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DataSourceType != nil {
		in, out := &in.DataSourceType, &out.DataSourceType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DocumentRoot != nil {
		in, out := &in.DocumentRoot, &out.DocumentRoot
		*out = new(string)
		**out = **in
	}
	if in.Domains != nil {
		in, out := &in.Domains, &out.Domains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableSSL != nil {
		in, out := &in.EnableSSL, &out.EnableSSL
		*out = new(bool)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = make([]EnvironmentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RailsEnv != nil {
		in, out := &in.RailsEnv, &out.RailsEnv
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSLConfiguration != nil {
		in, out := &in.SSLConfiguration, &out.SSLConfiguration
		*out = make([]SSLConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationParameters.
func (in *ApplicationParameters) DeepCopy() *ApplicationParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSpec) DeepCopyInto(out *ApplicationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSpec.
func (in *ApplicationSpec) DeepCopy() *ApplicationSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationStatus) DeepCopyInto(out *ApplicationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationStatus.
func (in *ApplicationStatus) DeepCopy() *ApplicationStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCookbooksSourceObservation) DeepCopyInto(out *CustomCookbooksSourceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCookbooksSourceObservation.
func (in *CustomCookbooksSourceObservation) DeepCopy() *CustomCookbooksSourceObservation {
	if in == nil {
		return nil
	}
	out := new(CustomCookbooksSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCookbooksSourceParameters) DeepCopyInto(out *CustomCookbooksSourceParameters) {
	*out = *in
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	if in.SSHKeySecretRef != nil {
		in, out := &in.SSHKeySecretRef, &out.SSHKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCookbooksSourceParameters.
func (in *CustomCookbooksSourceParameters) DeepCopy() *CustomCookbooksSourceParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCookbooksSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLayer) DeepCopyInto(out *CustomLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLayer.
func (in *CustomLayer) DeepCopy() *CustomLayer {
	if in == nil {
		return nil
	}
	out := new(CustomLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLayerList) DeepCopyInto(out *CustomLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CustomLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLayerList.
func (in *CustomLayerList) DeepCopy() *CustomLayerList {
	if in == nil {
		return nil
	}
	out := new(CustomLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLayerObservation) DeepCopyInto(out *CustomLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLayerObservation.
func (in *CustomLayerObservation) DeepCopy() *CustomLayerObservation {
	if in == nil {
		return nil
	}
	out := new(CustomLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLayerParameters) DeepCopyInto(out *CustomLayerParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIdRefs != nil {
		in, out := &in.CustomSecurityGroupIdRefs, &out.CustomSecurityGroupIdRefs
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.CustomSecurityGroupIdSelector != nil {
		in, out := &in.CustomSecurityGroupIdSelector, &out.CustomSecurityGroupIdSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]EBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ShortName != nil {
		in, out := &in.ShortName, &out.ShortName
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLayerParameters.
func (in *CustomLayerParameters) DeepCopy() *CustomLayerParameters {
	if in == nil {
		return nil
	}
	out := new(CustomLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLayerSpec) DeepCopyInto(out *CustomLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLayerSpec.
func (in *CustomLayerSpec) DeepCopy() *CustomLayerSpec {
	if in == nil {
		return nil
	}
	out := new(CustomLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomLayerStatus) DeepCopyInto(out *CustomLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomLayerStatus.
func (in *CustomLayerStatus) DeepCopy() *CustomLayerStatus {
	if in == nil {
		return nil
	}
	out := new(CustomLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSBlockDeviceObservation) DeepCopyInto(out *EBSBlockDeviceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSBlockDeviceObservation.
func (in *EBSBlockDeviceObservation) DeepCopy() *EBSBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(EBSBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSBlockDeviceParameters) DeepCopyInto(out *EBSBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.SnapshotID != nil {
		in, out := &in.SnapshotID, &out.SnapshotID
		*out = new(string)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSBlockDeviceParameters.
func (in *EBSBlockDeviceParameters) DeepCopy() *EBSBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(EBSBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSVolumeObservation) DeepCopyInto(out *EBSVolumeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSVolumeObservation.
func (in *EBSVolumeObservation) DeepCopy() *EBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(EBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSVolumeParameters) DeepCopyInto(out *EBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSVolumeParameters.
func (in *EBSVolumeParameters) DeepCopy() *EBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(EBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentObservation) DeepCopyInto(out *EnvironmentObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentObservation.
func (in *EnvironmentObservation) DeepCopy() *EnvironmentObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentParameters) DeepCopyInto(out *EnvironmentParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentParameters.
func (in *EnvironmentParameters) DeepCopy() *EnvironmentParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralBlockDeviceObservation) DeepCopyInto(out *EphemeralBlockDeviceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralBlockDeviceObservation.
func (in *EphemeralBlockDeviceObservation) DeepCopy() *EphemeralBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(EphemeralBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralBlockDeviceParameters) DeepCopyInto(out *EphemeralBlockDeviceParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.VirtualName != nil {
		in, out := &in.VirtualName, &out.VirtualName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralBlockDeviceParameters.
func (in *EphemeralBlockDeviceParameters) DeepCopy() *EphemeralBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(EphemeralBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayer) DeepCopyInto(out *GangliaLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayer.
func (in *GangliaLayer) DeepCopy() *GangliaLayer {
	if in == nil {
		return nil
	}
	out := new(GangliaLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GangliaLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerEBSVolumeObservation) DeepCopyInto(out *GangliaLayerEBSVolumeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerEBSVolumeObservation.
func (in *GangliaLayerEBSVolumeObservation) DeepCopy() *GangliaLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerEBSVolumeParameters) DeepCopyInto(out *GangliaLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerEBSVolumeParameters.
func (in *GangliaLayerEBSVolumeParameters) DeepCopy() *GangliaLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerList) DeepCopyInto(out *GangliaLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GangliaLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerList.
func (in *GangliaLayerList) DeepCopy() *GangliaLayerList {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GangliaLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerObservation) DeepCopyInto(out *GangliaLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerObservation.
func (in *GangliaLayerObservation) DeepCopy() *GangliaLayerObservation {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerParameters) DeepCopyInto(out *GangliaLayerParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIdRefs != nil {
		in, out := &in.CustomSecurityGroupIdRefs, &out.CustomSecurityGroupIdRefs
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.CustomSecurityGroupIdSelector != nil {
		in, out := &in.CustomSecurityGroupIdSelector, &out.CustomSecurityGroupIdSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]GangliaLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerParameters.
func (in *GangliaLayerParameters) DeepCopy() *GangliaLayerParameters {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerSpec) DeepCopyInto(out *GangliaLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerSpec.
func (in *GangliaLayerSpec) DeepCopy() *GangliaLayerSpec {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GangliaLayerStatus) DeepCopyInto(out *GangliaLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GangliaLayerStatus.
func (in *GangliaLayerStatus) DeepCopy() *GangliaLayerStatus {
	if in == nil {
		return nil
	}
	out := new(GangliaLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayer) DeepCopyInto(out *HAProxyLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayer.
func (in *HAProxyLayer) DeepCopy() *HAProxyLayer {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HAProxyLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerEBSVolumeObservation) DeepCopyInto(out *HAProxyLayerEBSVolumeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerEBSVolumeObservation.
func (in *HAProxyLayerEBSVolumeObservation) DeepCopy() *HAProxyLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerEBSVolumeParameters) DeepCopyInto(out *HAProxyLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerEBSVolumeParameters.
func (in *HAProxyLayerEBSVolumeParameters) DeepCopy() *HAProxyLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerList) DeepCopyInto(out *HAProxyLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HAProxyLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerList.
func (in *HAProxyLayerList) DeepCopy() *HAProxyLayerList {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HAProxyLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerObservation) DeepCopyInto(out *HAProxyLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerObservation.
func (in *HAProxyLayerObservation) DeepCopy() *HAProxyLayerObservation {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerParameters) DeepCopyInto(out *HAProxyLayerParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIdRefs != nil {
		in, out := &in.CustomSecurityGroupIdRefs, &out.CustomSecurityGroupIdRefs
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.CustomSecurityGroupIdSelector != nil {
		in, out := &in.CustomSecurityGroupIdSelector, &out.CustomSecurityGroupIdSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]HAProxyLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.HealthcheckMethod != nil {
		in, out := &in.HealthcheckMethod, &out.HealthcheckMethod
		*out = new(string)
		**out = **in
	}
	if in.HealthcheckURL != nil {
		in, out := &in.HealthcheckURL, &out.HealthcheckURL
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.StatsEnabled != nil {
		in, out := &in.StatsEnabled, &out.StatsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StatsPassword != nil {
		in, out := &in.StatsPassword, &out.StatsPassword
		*out = new(string)
		**out = **in
	}
	if in.StatsURL != nil {
		in, out := &in.StatsURL, &out.StatsURL
		*out = new(string)
		**out = **in
	}
	if in.StatsUser != nil {
		in, out := &in.StatsUser, &out.StatsUser
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerParameters.
func (in *HAProxyLayerParameters) DeepCopy() *HAProxyLayerParameters {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerSpec) DeepCopyInto(out *HAProxyLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerSpec.
func (in *HAProxyLayerSpec) DeepCopy() *HAProxyLayerSpec {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HAProxyLayerStatus) DeepCopyInto(out *HAProxyLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HAProxyLayerStatus.
func (in *HAProxyLayerStatus) DeepCopy() *HAProxyLayerStatus {
	if in == nil {
		return nil
	}
	out := new(HAProxyLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance) DeepCopyInto(out *Instance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance.
func (in *Instance) DeepCopy() *Instance {
	if in == nil {
		return nil
	}
	out := new(Instance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Instance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceList) DeepCopyInto(out *InstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Instance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceList.
func (in *InstanceList) DeepCopy() *InstanceList {
	if in == nil {
		return nil
	}
	out := new(InstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceObservation) DeepCopyInto(out *InstanceObservation) {
	*out = *in
	if in.EC2InstanceID != nil {
		in, out := &in.EC2InstanceID, &out.EC2InstanceID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceObservation.
func (in *InstanceObservation) DeepCopy() *InstanceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceParameters) DeepCopyInto(out *InstanceParameters) {
	*out = *in
	if in.AMIID != nil {
		in, out := &in.AMIID, &out.AMIID
		*out = new(string)
		**out = **in
	}
	if in.AgentVersion != nil {
		in, out := &in.AgentVersion, &out.AgentVersion
		*out = new(string)
		**out = **in
	}
	if in.Architecture != nil {
		in, out := &in.Architecture, &out.Architecture
		*out = new(string)
		**out = **in
	}
	if in.AutoScalingType != nil {
		in, out := &in.AutoScalingType, &out.AutoScalingType
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DeleteEBS != nil {
		in, out := &in.DeleteEBS, &out.DeleteEBS
		*out = new(bool)
		**out = **in
	}
	if in.DeleteEIP != nil {
		in, out := &in.DeleteEIP, &out.DeleteEIP
		*out = new(bool)
		**out = **in
	}
	if in.EBSBlockDevice != nil {
		in, out := &in.EBSBlockDevice, &out.EBSBlockDevice
		*out = make([]EBSBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EBSOptimized != nil {
		in, out := &in.EBSOptimized, &out.EBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.EcsClusterArn != nil {
		in, out := &in.EcsClusterArn, &out.EcsClusterArn
		*out = new(string)
		**out = **in
	}
	if in.ElasticIP != nil {
		in, out := &in.ElasticIP, &out.ElasticIP
		*out = new(string)
		**out = **in
	}
	if in.EphemeralBlockDevice != nil {
		in, out := &in.EphemeralBlockDevice, &out.EphemeralBlockDevice
		*out = make([]EphemeralBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.InfrastructureClass != nil {
		in, out := &in.InfrastructureClass, &out.InfrastructureClass
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceProfileArn != nil {
		in, out := &in.InstanceProfileArn, &out.InstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.LastServiceErrorID != nil {
		in, out := &in.LastServiceErrorID, &out.LastServiceErrorID
		*out = new(string)
		**out = **in
	}
	if in.LayerIds != nil {
		in, out := &in.LayerIds, &out.LayerIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Os != nil {
		in, out := &in.Os, &out.Os
		*out = new(string)
		**out = **in
	}
	if in.Platform != nil {
		in, out := &in.Platform, &out.Platform
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNS != nil {
		in, out := &in.PrivateDNS, &out.PrivateDNS
		*out = new(string)
		**out = **in
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.PublicDNS != nil {
		in, out := &in.PublicDNS, &out.PublicDNS
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegisteredBy != nil {
		in, out := &in.RegisteredBy, &out.RegisteredBy
		*out = new(string)
		**out = **in
	}
	if in.ReportedAgentVersion != nil {
		in, out := &in.ReportedAgentVersion, &out.ReportedAgentVersion
		*out = new(string)
		**out = **in
	}
	if in.ReportedOsFamily != nil {
		in, out := &in.ReportedOsFamily, &out.ReportedOsFamily
		*out = new(string)
		**out = **in
	}
	if in.ReportedOsName != nil {
		in, out := &in.ReportedOsName, &out.ReportedOsName
		*out = new(string)
		**out = **in
	}
	if in.ReportedOsVersion != nil {
		in, out := &in.ReportedOsVersion, &out.ReportedOsVersion
		*out = new(string)
		**out = **in
	}
	if in.RootBlockDevice != nil {
		in, out := &in.RootBlockDevice, &out.RootBlockDevice
		*out = make([]RootBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RootDeviceType != nil {
		in, out := &in.RootDeviceType, &out.RootDeviceType
		*out = new(string)
		**out = **in
	}
	if in.RootDeviceVolumeID != nil {
		in, out := &in.RootDeviceVolumeID, &out.RootDeviceVolumeID
		*out = new(string)
		**out = **in
	}
	if in.SSHHostDsaKeyFingerprint != nil {
		in, out := &in.SSHHostDsaKeyFingerprint, &out.SSHHostDsaKeyFingerprint
		*out = new(string)
		**out = **in
	}
	if in.SSHHostRsaKeyFingerprint != nil {
		in, out := &in.SSHHostRsaKeyFingerprint, &out.SSHHostRsaKeyFingerprint
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyName != nil {
		in, out := &in.SSHKeyName, &out.SSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIdRefs != nil {
		in, out := &in.SecurityGroupIdRefs, &out.SecurityGroupIdRefs
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.SecurityGroupIdSelector != nil {
		in, out := &in.SecurityGroupIdSelector, &out.SecurityGroupIdSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIds != nil {
		in, out := &in.SecurityGroupIds, &out.SecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tenancy != nil {
		in, out := &in.Tenancy, &out.Tenancy
		*out = new(string)
		**out = **in
	}
	if in.VirtualizationType != nil {
		in, out := &in.VirtualizationType, &out.VirtualizationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceParameters.
func (in *InstanceParameters) DeepCopy() *InstanceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSpec) DeepCopyInto(out *InstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSpec.
func (in *InstanceSpec) DeepCopy() *InstanceSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStatus) DeepCopyInto(out *InstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStatus.
func (in *InstanceStatus) DeepCopy() *InstanceStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayer) DeepCopyInto(out *JavaAppLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayer.
func (in *JavaAppLayer) DeepCopy() *JavaAppLayer {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JavaAppLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerEBSVolumeObservation) DeepCopyInto(out *JavaAppLayerEBSVolumeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerEBSVolumeObservation.
func (in *JavaAppLayerEBSVolumeObservation) DeepCopy() *JavaAppLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerEBSVolumeParameters) DeepCopyInto(out *JavaAppLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerEBSVolumeParameters.
func (in *JavaAppLayerEBSVolumeParameters) DeepCopy() *JavaAppLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerList) DeepCopyInto(out *JavaAppLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]JavaAppLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerList.
func (in *JavaAppLayerList) DeepCopy() *JavaAppLayerList {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JavaAppLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerObservation) DeepCopyInto(out *JavaAppLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerObservation.
func (in *JavaAppLayerObservation) DeepCopy() *JavaAppLayerObservation {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerParameters) DeepCopyInto(out *JavaAppLayerParameters) {
	*out = *in
	if in.AppServer != nil {
		in, out := &in.AppServer, &out.AppServer
		*out = new(string)
		**out = **in
	}
	if in.AppServerVersion != nil {
		in, out := &in.AppServerVersion, &out.AppServerVersion
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIdRefs != nil {
		in, out := &in.CustomSecurityGroupIdRefs, &out.CustomSecurityGroupIdRefs
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.CustomSecurityGroupIdSelector != nil {
		in, out := &in.CustomSecurityGroupIdSelector, &out.CustomSecurityGroupIdSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]JavaAppLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.JvmOptions != nil {
		in, out := &in.JvmOptions, &out.JvmOptions
		*out = new(string)
		**out = **in
	}
	if in.JvmType != nil {
		in, out := &in.JvmType, &out.JvmType
		*out = new(string)
		**out = **in
	}
	if in.JvmVersion != nil {
		in, out := &in.JvmVersion, &out.JvmVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerParameters.
func (in *JavaAppLayerParameters) DeepCopy() *JavaAppLayerParameters {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerSpec) DeepCopyInto(out *JavaAppLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerSpec.
func (in *JavaAppLayerSpec) DeepCopy() *JavaAppLayerSpec {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JavaAppLayerStatus) DeepCopyInto(out *JavaAppLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JavaAppLayerStatus.
func (in *JavaAppLayerStatus) DeepCopy() *JavaAppLayerStatus {
	if in == nil {
		return nil
	}
	out := new(JavaAppLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayer) DeepCopyInto(out *MemcachedLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayer.
func (in *MemcachedLayer) DeepCopy() *MemcachedLayer {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MemcachedLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerEBSVolumeObservation) DeepCopyInto(out *MemcachedLayerEBSVolumeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerEBSVolumeObservation.
func (in *MemcachedLayerEBSVolumeObservation) DeepCopy() *MemcachedLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerEBSVolumeParameters) DeepCopyInto(out *MemcachedLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerEBSVolumeParameters.
func (in *MemcachedLayerEBSVolumeParameters) DeepCopy() *MemcachedLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerList) DeepCopyInto(out *MemcachedLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MemcachedLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerList.
func (in *MemcachedLayerList) DeepCopy() *MemcachedLayerList {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MemcachedLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerObservation) DeepCopyInto(out *MemcachedLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerObservation.
func (in *MemcachedLayerObservation) DeepCopy() *MemcachedLayerObservation {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerParameters) DeepCopyInto(out *MemcachedLayerParameters) {
	*out = *in
	if in.AllocatedMemory != nil {
		in, out := &in.AllocatedMemory, &out.AllocatedMemory
		*out = new(float64)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIdRefs != nil {
		in, out := &in.CustomSecurityGroupIdRefs, &out.CustomSecurityGroupIdRefs
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.CustomSecurityGroupIdSelector != nil {
		in, out := &in.CustomSecurityGroupIdSelector, &out.CustomSecurityGroupIdSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]MemcachedLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerParameters.
func (in *MemcachedLayerParameters) DeepCopy() *MemcachedLayerParameters {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerSpec) DeepCopyInto(out *MemcachedLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerSpec.
func (in *MemcachedLayerSpec) DeepCopy() *MemcachedLayerSpec {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedLayerStatus) DeepCopyInto(out *MemcachedLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedLayerStatus.
func (in *MemcachedLayerStatus) DeepCopy() *MemcachedLayerStatus {
	if in == nil {
		return nil
	}
	out := new(MemcachedLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayer) DeepCopyInto(out *MySQLLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayer.
func (in *MySQLLayer) DeepCopy() *MySQLLayer {
	if in == nil {
		return nil
	}
	out := new(MySQLLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MySQLLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerEBSVolumeObservation) DeepCopyInto(out *MySQLLayerEBSVolumeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerEBSVolumeObservation.
func (in *MySQLLayerEBSVolumeObservation) DeepCopy() *MySQLLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerEBSVolumeParameters) DeepCopyInto(out *MySQLLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerEBSVolumeParameters.
func (in *MySQLLayerEBSVolumeParameters) DeepCopy() *MySQLLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerList) DeepCopyInto(out *MySQLLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MySQLLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerList.
func (in *MySQLLayerList) DeepCopy() *MySQLLayerList {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MySQLLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerObservation) DeepCopyInto(out *MySQLLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerObservation.
func (in *MySQLLayerObservation) DeepCopy() *MySQLLayerObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerParameters) DeepCopyInto(out *MySQLLayerParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIdRefs != nil {
		in, out := &in.CustomSecurityGroupIdRefs, &out.CustomSecurityGroupIdRefs
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.CustomSecurityGroupIdSelector != nil {
		in, out := &in.CustomSecurityGroupIdSelector, &out.CustomSecurityGroupIdSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]MySQLLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RootPassword != nil {
		in, out := &in.RootPassword, &out.RootPassword
		*out = new(string)
		**out = **in
	}
	if in.RootPasswordOnAllInstances != nil {
		in, out := &in.RootPasswordOnAllInstances, &out.RootPasswordOnAllInstances
		*out = new(bool)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerParameters.
func (in *MySQLLayerParameters) DeepCopy() *MySQLLayerParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerSpec) DeepCopyInto(out *MySQLLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerSpec.
func (in *MySQLLayerSpec) DeepCopy() *MySQLLayerSpec {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLLayerStatus) DeepCopyInto(out *MySQLLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLLayerStatus.
func (in *MySQLLayerStatus) DeepCopy() *MySQLLayerStatus {
	if in == nil {
		return nil
	}
	out := new(MySQLLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayer) DeepCopyInto(out *NodeJSAppLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayer.
func (in *NodeJSAppLayer) DeepCopy() *NodeJSAppLayer {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeJSAppLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerEBSVolumeObservation) DeepCopyInto(out *NodeJSAppLayerEBSVolumeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerEBSVolumeObservation.
func (in *NodeJSAppLayerEBSVolumeObservation) DeepCopy() *NodeJSAppLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerEBSVolumeParameters) DeepCopyInto(out *NodeJSAppLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerEBSVolumeParameters.
func (in *NodeJSAppLayerEBSVolumeParameters) DeepCopy() *NodeJSAppLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerList) DeepCopyInto(out *NodeJSAppLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeJSAppLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerList.
func (in *NodeJSAppLayerList) DeepCopy() *NodeJSAppLayerList {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeJSAppLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerObservation) DeepCopyInto(out *NodeJSAppLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerObservation.
func (in *NodeJSAppLayerObservation) DeepCopy() *NodeJSAppLayerObservation {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerParameters) DeepCopyInto(out *NodeJSAppLayerParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIdRefs != nil {
		in, out := &in.CustomSecurityGroupIdRefs, &out.CustomSecurityGroupIdRefs
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.CustomSecurityGroupIdSelector != nil {
		in, out := &in.CustomSecurityGroupIdSelector, &out.CustomSecurityGroupIdSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]NodeJSAppLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeJSVersion != nil {
		in, out := &in.NodeJSVersion, &out.NodeJSVersion
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerParameters.
func (in *NodeJSAppLayerParameters) DeepCopy() *NodeJSAppLayerParameters {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerSpec) DeepCopyInto(out *NodeJSAppLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerSpec.
func (in *NodeJSAppLayerSpec) DeepCopy() *NodeJSAppLayerSpec {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeJSAppLayerStatus) DeepCopyInto(out *NodeJSAppLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeJSAppLayerStatus.
func (in *NodeJSAppLayerStatus) DeepCopy() *NodeJSAppLayerStatus {
	if in == nil {
		return nil
	}
	out := new(NodeJSAppLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayer) DeepCopyInto(out *PHPAppLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayer.
func (in *PHPAppLayer) DeepCopy() *PHPAppLayer {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PHPAppLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerEBSVolumeObservation) DeepCopyInto(out *PHPAppLayerEBSVolumeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerEBSVolumeObservation.
func (in *PHPAppLayerEBSVolumeObservation) DeepCopy() *PHPAppLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerEBSVolumeParameters) DeepCopyInto(out *PHPAppLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerEBSVolumeParameters.
func (in *PHPAppLayerEBSVolumeParameters) DeepCopy() *PHPAppLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerList) DeepCopyInto(out *PHPAppLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PHPAppLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerList.
func (in *PHPAppLayerList) DeepCopy() *PHPAppLayerList {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PHPAppLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerObservation) DeepCopyInto(out *PHPAppLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerObservation.
func (in *PHPAppLayerObservation) DeepCopy() *PHPAppLayerObservation {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerParameters) DeepCopyInto(out *PHPAppLayerParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIdRefs != nil {
		in, out := &in.CustomSecurityGroupIdRefs, &out.CustomSecurityGroupIdRefs
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.CustomSecurityGroupIdSelector != nil {
		in, out := &in.CustomSecurityGroupIdSelector, &out.CustomSecurityGroupIdSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]PHPAppLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerParameters.
func (in *PHPAppLayerParameters) DeepCopy() *PHPAppLayerParameters {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerSpec) DeepCopyInto(out *PHPAppLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerSpec.
func (in *PHPAppLayerSpec) DeepCopy() *PHPAppLayerSpec {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PHPAppLayerStatus) DeepCopyInto(out *PHPAppLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PHPAppLayerStatus.
func (in *PHPAppLayerStatus) DeepCopy() *PHPAppLayerStatus {
	if in == nil {
		return nil
	}
	out := new(PHPAppLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Permission) DeepCopyInto(out *Permission) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Permission.
func (in *Permission) DeepCopy() *Permission {
	if in == nil {
		return nil
	}
	out := new(Permission)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Permission) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionList) DeepCopyInto(out *PermissionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Permission, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionList.
func (in *PermissionList) DeepCopy() *PermissionList {
	if in == nil {
		return nil
	}
	out := new(PermissionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PermissionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionObservation) DeepCopyInto(out *PermissionObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionObservation.
func (in *PermissionObservation) DeepCopy() *PermissionObservation {
	if in == nil {
		return nil
	}
	out := new(PermissionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionParameters) DeepCopyInto(out *PermissionParameters) {
	*out = *in
	if in.AllowSSH != nil {
		in, out := &in.AllowSSH, &out.AllowSSH
		*out = new(bool)
		**out = **in
	}
	if in.AllowSudo != nil {
		in, out := &in.AllowSudo, &out.AllowSudo
		*out = new(bool)
		**out = **in
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.UserArn != nil {
		in, out := &in.UserArn, &out.UserArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionParameters.
func (in *PermissionParameters) DeepCopy() *PermissionParameters {
	if in == nil {
		return nil
	}
	out := new(PermissionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionSpec) DeepCopyInto(out *PermissionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionSpec.
func (in *PermissionSpec) DeepCopy() *PermissionSpec {
	if in == nil {
		return nil
	}
	out := new(PermissionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionStatus) DeepCopyInto(out *PermissionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionStatus.
func (in *PermissionStatus) DeepCopy() *PermissionStatus {
	if in == nil {
		return nil
	}
	out := new(PermissionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RDSDBInstance) DeepCopyInto(out *RDSDBInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RDSDBInstance.
func (in *RDSDBInstance) DeepCopy() *RDSDBInstance {
	if in == nil {
		return nil
	}
	out := new(RDSDBInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RDSDBInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RDSDBInstanceList) DeepCopyInto(out *RDSDBInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RDSDBInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RDSDBInstanceList.
func (in *RDSDBInstanceList) DeepCopy() *RDSDBInstanceList {
	if in == nil {
		return nil
	}
	out := new(RDSDBInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RDSDBInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RDSDBInstanceObservation) DeepCopyInto(out *RDSDBInstanceObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RDSDBInstanceObservation.
func (in *RDSDBInstanceObservation) DeepCopy() *RDSDBInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(RDSDBInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RDSDBInstanceParameters) DeepCopyInto(out *RDSDBInstanceParameters) {
	*out = *in
	out.DBPasswordSecretRef = in.DBPasswordSecretRef
	if in.DBUser != nil {
		in, out := &in.DBUser, &out.DBUser
		*out = new(string)
		**out = **in
	}
	if in.RDSDBInstanceArn != nil {
		in, out := &in.RDSDBInstanceArn, &out.RDSDBInstanceArn
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RDSDBInstanceParameters.
func (in *RDSDBInstanceParameters) DeepCopy() *RDSDBInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(RDSDBInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RDSDBInstanceSpec) DeepCopyInto(out *RDSDBInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RDSDBInstanceSpec.
func (in *RDSDBInstanceSpec) DeepCopy() *RDSDBInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(RDSDBInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RDSDBInstanceStatus) DeepCopyInto(out *RDSDBInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RDSDBInstanceStatus.
func (in *RDSDBInstanceStatus) DeepCopy() *RDSDBInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(RDSDBInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayer) DeepCopyInto(out *RailsAppLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayer.
func (in *RailsAppLayer) DeepCopy() *RailsAppLayer {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RailsAppLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerEBSVolumeObservation) DeepCopyInto(out *RailsAppLayerEBSVolumeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerEBSVolumeObservation.
func (in *RailsAppLayerEBSVolumeObservation) DeepCopy() *RailsAppLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerEBSVolumeParameters) DeepCopyInto(out *RailsAppLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerEBSVolumeParameters.
func (in *RailsAppLayerEBSVolumeParameters) DeepCopy() *RailsAppLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerList) DeepCopyInto(out *RailsAppLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RailsAppLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerList.
func (in *RailsAppLayerList) DeepCopy() *RailsAppLayerList {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RailsAppLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerObservation) DeepCopyInto(out *RailsAppLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerObservation.
func (in *RailsAppLayerObservation) DeepCopy() *RailsAppLayerObservation {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerParameters) DeepCopyInto(out *RailsAppLayerParameters) {
	*out = *in
	if in.AppServer != nil {
		in, out := &in.AppServer, &out.AppServer
		*out = new(string)
		**out = **in
	}
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.BundlerVersion != nil {
		in, out := &in.BundlerVersion, &out.BundlerVersion
		*out = new(string)
		**out = **in
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIdRefs != nil {
		in, out := &in.CustomSecurityGroupIdRefs, &out.CustomSecurityGroupIdRefs
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.CustomSecurityGroupIdSelector != nil {
		in, out := &in.CustomSecurityGroupIdSelector, &out.CustomSecurityGroupIdSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]RailsAppLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.ManageBundler != nil {
		in, out := &in.ManageBundler, &out.ManageBundler
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PassengerVersion != nil {
		in, out := &in.PassengerVersion, &out.PassengerVersion
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RubyVersion != nil {
		in, out := &in.RubyVersion, &out.RubyVersion
		*out = new(string)
		**out = **in
	}
	if in.RubygemsVersion != nil {
		in, out := &in.RubygemsVersion, &out.RubygemsVersion
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerParameters.
func (in *RailsAppLayerParameters) DeepCopy() *RailsAppLayerParameters {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerSpec) DeepCopyInto(out *RailsAppLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerSpec.
func (in *RailsAppLayerSpec) DeepCopy() *RailsAppLayerSpec {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RailsAppLayerStatus) DeepCopyInto(out *RailsAppLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RailsAppLayerStatus.
func (in *RailsAppLayerStatus) DeepCopy() *RailsAppLayerStatus {
	if in == nil {
		return nil
	}
	out := new(RailsAppLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootBlockDeviceObservation) DeepCopyInto(out *RootBlockDeviceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootBlockDeviceObservation.
func (in *RootBlockDeviceObservation) DeepCopy() *RootBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(RootBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RootBlockDeviceParameters) DeepCopyInto(out *RootBlockDeviceParameters) {
	*out = *in
	if in.DeleteOnTermination != nil {
		in, out := &in.DeleteOnTermination, &out.DeleteOnTermination
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RootBlockDeviceParameters.
func (in *RootBlockDeviceParameters) DeepCopy() *RootBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(RootBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLConfigurationObservation) DeepCopyInto(out *SSLConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLConfigurationObservation.
func (in *SSLConfigurationObservation) DeepCopy() *SSLConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(SSLConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLConfigurationParameters) DeepCopyInto(out *SSLConfigurationParameters) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.Chain != nil {
		in, out := &in.Chain, &out.Chain
		*out = new(string)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLConfigurationParameters.
func (in *SSLConfigurationParameters) DeepCopy() *SSLConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(SSLConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Stack) DeepCopyInto(out *Stack) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Stack.
func (in *Stack) DeepCopy() *Stack {
	if in == nil {
		return nil
	}
	out := new(Stack)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Stack) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackList) DeepCopyInto(out *StackList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Stack, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackList.
func (in *StackList) DeepCopy() *StackList {
	if in == nil {
		return nil
	}
	out := new(StackList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StackList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackObservation) DeepCopyInto(out *StackObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.StackEndpoint != nil {
		in, out := &in.StackEndpoint, &out.StackEndpoint
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackObservation.
func (in *StackObservation) DeepCopy() *StackObservation {
	if in == nil {
		return nil
	}
	out := new(StackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackParameters) DeepCopyInto(out *StackParameters) {
	*out = *in
	if in.AgentVersion != nil {
		in, out := &in.AgentVersion, &out.AgentVersion
		*out = new(string)
		**out = **in
	}
	if in.BerkshelfVersion != nil {
		in, out := &in.BerkshelfVersion, &out.BerkshelfVersion
		*out = new(string)
		**out = **in
	}
	if in.Color != nil {
		in, out := &in.Color, &out.Color
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationManagerName != nil {
		in, out := &in.ConfigurationManagerName, &out.ConfigurationManagerName
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationManagerVersion != nil {
		in, out := &in.ConfigurationManagerVersion, &out.ConfigurationManagerVersion
		*out = new(string)
		**out = **in
	}
	if in.CustomCookbooksSource != nil {
		in, out := &in.CustomCookbooksSource, &out.CustomCookbooksSource
		*out = make([]CustomCookbooksSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.DefaultAvailabilityZone != nil {
		in, out := &in.DefaultAvailabilityZone, &out.DefaultAvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.DefaultInstanceProfileArn != nil {
		in, out := &in.DefaultInstanceProfileArn, &out.DefaultInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.DefaultOs != nil {
		in, out := &in.DefaultOs, &out.DefaultOs
		*out = new(string)
		**out = **in
	}
	if in.DefaultRootDeviceType != nil {
		in, out := &in.DefaultRootDeviceType, &out.DefaultRootDeviceType
		*out = new(string)
		**out = **in
	}
	if in.DefaultSSHKeyName != nil {
		in, out := &in.DefaultSSHKeyName, &out.DefaultSSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.DefaultSubnetID != nil {
		in, out := &in.DefaultSubnetID, &out.DefaultSubnetID
		*out = new(string)
		**out = **in
	}
	if in.HostnameTheme != nil {
		in, out := &in.HostnameTheme, &out.HostnameTheme
		*out = new(string)
		**out = **in
	}
	if in.ManageBerkshelf != nil {
		in, out := &in.ManageBerkshelf, &out.ManageBerkshelf
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceRoleArn != nil {
		in, out := &in.ServiceRoleArn, &out.ServiceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.ServiceRoleArnRef != nil {
		in, out := &in.ServiceRoleArnRef, &out.ServiceRoleArnRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ServiceRoleArnSelector != nil {
		in, out := &in.ServiceRoleArnSelector, &out.ServiceRoleArnSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseCustomCookbooks != nil {
		in, out := &in.UseCustomCookbooks, &out.UseCustomCookbooks
		*out = new(bool)
		**out = **in
	}
	if in.UseOpsworksSecurityGroups != nil {
		in, out := &in.UseOpsworksSecurityGroups, &out.UseOpsworksSecurityGroups
		*out = new(bool)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VpcIdRef != nil {
		in, out := &in.VpcIdRef, &out.VpcIdRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.VpcIdSelector != nil {
		in, out := &in.VpcIdSelector, &out.VpcIdSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackParameters.
func (in *StackParameters) DeepCopy() *StackParameters {
	if in == nil {
		return nil
	}
	out := new(StackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackSpec) DeepCopyInto(out *StackSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackSpec.
func (in *StackSpec) DeepCopy() *StackSpec {
	if in == nil {
		return nil
	}
	out := new(StackSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StackStatus) DeepCopyInto(out *StackStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StackStatus.
func (in *StackStatus) DeepCopy() *StackStatus {
	if in == nil {
		return nil
	}
	out := new(StackStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayer) DeepCopyInto(out *StaticWebLayer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayer.
func (in *StaticWebLayer) DeepCopy() *StaticWebLayer {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StaticWebLayer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerEBSVolumeObservation) DeepCopyInto(out *StaticWebLayerEBSVolumeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerEBSVolumeObservation.
func (in *StaticWebLayerEBSVolumeObservation) DeepCopy() *StaticWebLayerEBSVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerEBSVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerEBSVolumeParameters) DeepCopyInto(out *StaticWebLayerEBSVolumeParameters) {
	*out = *in
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.MountPoint != nil {
		in, out := &in.MountPoint, &out.MountPoint
		*out = new(string)
		**out = **in
	}
	if in.NumberOfDisks != nil {
		in, out := &in.NumberOfDisks, &out.NumberOfDisks
		*out = new(float64)
		**out = **in
	}
	if in.RaidLevel != nil {
		in, out := &in.RaidLevel, &out.RaidLevel
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerEBSVolumeParameters.
func (in *StaticWebLayerEBSVolumeParameters) DeepCopy() *StaticWebLayerEBSVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerEBSVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerList) DeepCopyInto(out *StaticWebLayerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StaticWebLayer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerList.
func (in *StaticWebLayerList) DeepCopy() *StaticWebLayerList {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StaticWebLayerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerObservation) DeepCopyInto(out *StaticWebLayerObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.TagsAll != nil {
		in, out := &in.TagsAll, &out.TagsAll
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerObservation.
func (in *StaticWebLayerObservation) DeepCopy() *StaticWebLayerObservation {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerParameters) DeepCopyInto(out *StaticWebLayerParameters) {
	*out = *in
	if in.AutoAssignElasticIps != nil {
		in, out := &in.AutoAssignElasticIps, &out.AutoAssignElasticIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoAssignPublicIps != nil {
		in, out := &in.AutoAssignPublicIps, &out.AutoAssignPublicIps
		*out = new(bool)
		**out = **in
	}
	if in.AutoHealing != nil {
		in, out := &in.AutoHealing, &out.AutoHealing
		*out = new(bool)
		**out = **in
	}
	if in.CustomConfigureRecipes != nil {
		in, out := &in.CustomConfigureRecipes, &out.CustomConfigureRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomDeployRecipes != nil {
		in, out := &in.CustomDeployRecipes, &out.CustomDeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomInstanceProfileArn != nil {
		in, out := &in.CustomInstanceProfileArn, &out.CustomInstanceProfileArn
		*out = new(string)
		**out = **in
	}
	if in.CustomJSON != nil {
		in, out := &in.CustomJSON, &out.CustomJSON
		*out = new(string)
		**out = **in
	}
	if in.CustomSecurityGroupIdRefs != nil {
		in, out := &in.CustomSecurityGroupIdRefs, &out.CustomSecurityGroupIdRefs
		*out = make([]v1.Reference, len(*in))
		copy(*out, *in)
	}
	if in.CustomSecurityGroupIdSelector != nil {
		in, out := &in.CustomSecurityGroupIdSelector, &out.CustomSecurityGroupIdSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomSecurityGroupIds != nil {
		in, out := &in.CustomSecurityGroupIds, &out.CustomSecurityGroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSetupRecipes != nil {
		in, out := &in.CustomSetupRecipes, &out.CustomSetupRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomShutdownRecipes != nil {
		in, out := &in.CustomShutdownRecipes, &out.CustomShutdownRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomUndeployRecipes != nil {
		in, out := &in.CustomUndeployRecipes, &out.CustomUndeployRecipes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DrainELBOnShutdown != nil {
		in, out := &in.DrainELBOnShutdown, &out.DrainELBOnShutdown
		*out = new(bool)
		**out = **in
	}
	if in.EBSVolume != nil {
		in, out := &in.EBSVolume, &out.EBSVolume
		*out = make([]StaticWebLayerEBSVolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticLoadBalancer != nil {
		in, out := &in.ElasticLoadBalancer, &out.ElasticLoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.InstallUpdatesOnBoot != nil {
		in, out := &in.InstallUpdatesOnBoot, &out.InstallUpdatesOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.InstanceShutdownTimeout != nil {
		in, out := &in.InstanceShutdownTimeout, &out.InstanceShutdownTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.SystemPackages != nil {
		in, out := &in.SystemPackages, &out.SystemPackages
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseEBSOptimizedInstances != nil {
		in, out := &in.UseEBSOptimizedInstances, &out.UseEBSOptimizedInstances
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerParameters.
func (in *StaticWebLayerParameters) DeepCopy() *StaticWebLayerParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerSpec) DeepCopyInto(out *StaticWebLayerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerSpec.
func (in *StaticWebLayerSpec) DeepCopy() *StaticWebLayerSpec {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebLayerStatus) DeepCopyInto(out *StaticWebLayerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebLayerStatus.
func (in *StaticWebLayerStatus) DeepCopy() *StaticWebLayerStatus {
	if in == nil {
		return nil
	}
	out := new(StaticWebLayerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfile) DeepCopyInto(out *UserProfile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfile.
func (in *UserProfile) DeepCopy() *UserProfile {
	if in == nil {
		return nil
	}
	out := new(UserProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserProfile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileList) DeepCopyInto(out *UserProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UserProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileList.
func (in *UserProfileList) DeepCopy() *UserProfileList {
	if in == nil {
		return nil
	}
	out := new(UserProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileObservation) DeepCopyInto(out *UserProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileObservation.
func (in *UserProfileObservation) DeepCopy() *UserProfileObservation {
	if in == nil {
		return nil
	}
	out := new(UserProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileParameters) DeepCopyInto(out *UserProfileParameters) {
	*out = *in
	if in.AllowSelfManagement != nil {
		in, out := &in.AllowSelfManagement, &out.AllowSelfManagement
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKey != nil {
		in, out := &in.SSHPublicKey, &out.SSHPublicKey
		*out = new(string)
		**out = **in
	}
	if in.SSHUsername != nil {
		in, out := &in.SSHUsername, &out.SSHUsername
		*out = new(string)
		**out = **in
	}
	if in.UserArn != nil {
		in, out := &in.UserArn, &out.UserArn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileParameters.
func (in *UserProfileParameters) DeepCopy() *UserProfileParameters {
	if in == nil {
		return nil
	}
	out := new(UserProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileSpec) DeepCopyInto(out *UserProfileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileSpec.
func (in *UserProfileSpec) DeepCopy() *UserProfileSpec {
	if in == nil {
		return nil
	}
	out := new(UserProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserProfileStatus) DeepCopyInto(out *UserProfileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserProfileStatus.
func (in *UserProfileStatus) DeepCopy() *UserProfileStatus {
	if in == nil {
		return nil
	}
	out := new(UserProfileStatus)
	in.DeepCopyInto(out)
	return out
}
