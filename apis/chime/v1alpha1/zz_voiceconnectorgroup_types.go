/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ConnectorObservation struct {
}

type ConnectorParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	VoiceConnectorID *string `json:"voiceConnectorId" tf:"voice_connector_id,omitempty"`
}

type VoiceConnectorGroupObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type VoiceConnectorGroupParameters struct {

	// +kubebuilder:validation:Optional
	Connector []ConnectorParameters `json:"connector,omitempty" tf:"connector,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`
}

// VoiceConnectorGroupSpec defines the desired state of VoiceConnectorGroup
type VoiceConnectorGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VoiceConnectorGroupParameters `json:"forProvider"`
}

// VoiceConnectorGroupStatus defines the observed state of VoiceConnectorGroup.
type VoiceConnectorGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VoiceConnectorGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// VoiceConnectorGroup is the Schema for the VoiceConnectorGroups API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,awsjet}
type VoiceConnectorGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VoiceConnectorGroupSpec   `json:"spec"`
	Status            VoiceConnectorGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VoiceConnectorGroupList contains a list of VoiceConnectorGroups
type VoiceConnectorGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VoiceConnectorGroup `json:"items"`
}

// Repository type metadata.
var (
	VoiceConnectorGroup_Kind             = "VoiceConnectorGroup"
	VoiceConnectorGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VoiceConnectorGroup_Kind}.String()
	VoiceConnectorGroup_KindAPIVersion   = VoiceConnectorGroup_Kind + "." + CRDGroupVersion.String()
	VoiceConnectorGroup_GroupVersionKind = CRDGroupVersion.WithKind(VoiceConnectorGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&VoiceConnectorGroup{}, &VoiceConnectorGroupList{})
}
