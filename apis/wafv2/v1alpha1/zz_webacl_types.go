/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActionAllowCustomRequestHandlingInsertHeaderObservation struct {
}

type ActionAllowCustomRequestHandlingInsertHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type ActionAllowCustomRequestHandlingObservation struct {
}

type ActionAllowCustomRequestHandlingParameters struct {

	// +kubebuilder:validation:Required
	InsertHeader []ActionAllowCustomRequestHandlingInsertHeaderParameters `json:"insertHeader" tf:"insert_header,omitempty"`
}

type ActionAllowObservation struct {
}

type ActionAllowParameters struct {

	// +kubebuilder:validation:Optional
	CustomRequestHandling []ActionAllowCustomRequestHandlingParameters `json:"customRequestHandling,omitempty" tf:"custom_request_handling,omitempty"`
}

type ActionBlockCustomResponseObservation struct {
}

type ActionBlockCustomResponseParameters struct {

	// +kubebuilder:validation:Required
	ResponseCode *float64 `json:"responseCode" tf:"response_code,omitempty"`

	// +kubebuilder:validation:Optional
	ResponseHeader []BlockCustomResponseResponseHeaderParameters `json:"responseHeader,omitempty" tf:"response_header,omitempty"`
}

type ActionBlockObservation struct {
}

type ActionBlockParameters struct {

	// +kubebuilder:validation:Optional
	CustomResponse []ActionBlockCustomResponseParameters `json:"customResponse,omitempty" tf:"custom_response,omitempty"`
}

type ActionCountCustomRequestHandlingObservation struct {
}

type ActionCountCustomRequestHandlingParameters struct {

	// +kubebuilder:validation:Required
	InsertHeader []CountCustomRequestHandlingInsertHeaderParameters `json:"insertHeader" tf:"insert_header,omitempty"`
}

type ActionCountObservation struct {
}

type ActionCountParameters struct {

	// +kubebuilder:validation:Optional
	CustomRequestHandling []ActionCountCustomRequestHandlingParameters `json:"customRequestHandling,omitempty" tf:"custom_request_handling,omitempty"`
}

type AllowCustomRequestHandlingInsertHeaderObservation struct {
}

type AllowCustomRequestHandlingInsertHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type AllowCustomRequestHandlingObservation struct {
}

type AllowCustomRequestHandlingParameters struct {

	// +kubebuilder:validation:Required
	InsertHeader []AllowCustomRequestHandlingInsertHeaderParameters `json:"insertHeader" tf:"insert_header,omitempty"`
}

type AndStatementStatementAndStatementObservation struct {
}

type AndStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []AndStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type AndStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type AndStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type AndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type AndStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type AndStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []AndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type AndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type AndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type AndStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type AndStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []AndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type AndStatementStatementAndStatementStatementObservation struct {
}

type AndStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []StatementAndStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []StatementAndStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []StatementAndStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []StatementAndStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []AndStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []AndStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []StatementAndStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []StatementAndStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []StatementAndStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type AndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type AndStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type AndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type AndStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type AndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementNotStatementObservation struct {
}

type AndStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []AndStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type AndStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type AndStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type AndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type AndStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type AndStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []AndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type AndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type AndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type AndStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type AndStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []AndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type AndStatementStatementNotStatementStatementObservation struct {
}

type AndStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []AndStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []AndStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []AndStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []AndStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []AndStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []AndStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type AndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type AndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type AndStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type AndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type AndStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type AndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementOrStatementObservation struct {
}

type AndStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []AndStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type AndStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type AndStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type AndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type AndStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type AndStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []AndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type AndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type AndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type AndStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type AndStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []AndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type AndStatementStatementOrStatementStatementObservation struct {
}

type AndStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []AndStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []AndStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []AndStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []AndStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []AndStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []AndStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type AndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type AndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type AndStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type AndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type AndStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type AndStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []AndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []AndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type AndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type AndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type BlockCustomResponseObservation struct {
}

type BlockCustomResponseParameters struct {

	// +kubebuilder:validation:Required
	ResponseCode *float64 `json:"responseCode" tf:"response_code,omitempty"`

	// +kubebuilder:validation:Optional
	ResponseHeader []CustomResponseResponseHeaderParameters `json:"responseHeader,omitempty" tf:"response_header,omitempty"`
}

type BlockCustomResponseResponseHeaderObservation struct {
}

type BlockCustomResponseResponseHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type CountCustomRequestHandlingInsertHeaderObservation struct {
}

type CountCustomRequestHandlingInsertHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type CustomResponseResponseHeaderObservation struct {
}

type CustomResponseResponseHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type DefaultActionAllowObservation struct {
}

type DefaultActionAllowParameters struct {

	// +kubebuilder:validation:Optional
	CustomRequestHandling []AllowCustomRequestHandlingParameters `json:"customRequestHandling,omitempty" tf:"custom_request_handling,omitempty"`
}

type DefaultActionBlockObservation struct {
}

type DefaultActionBlockParameters struct {

	// +kubebuilder:validation:Optional
	CustomResponse []BlockCustomResponseParameters `json:"customResponse,omitempty" tf:"custom_response,omitempty"`
}

type DefaultActionObservation struct {
}

type DefaultActionParameters struct {

	// +kubebuilder:validation:Optional
	Allow []DefaultActionAllowParameters `json:"allow,omitempty" tf:"allow,omitempty"`

	// +kubebuilder:validation:Optional
	Block []DefaultActionBlockParameters `json:"block,omitempty" tf:"block,omitempty"`
}

type ExcludedRuleObservation struct {
}

type ExcludedRuleParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ManagedRuleGroupStatementObservation struct {
}

type ManagedRuleGroupStatementParameters struct {

	// +kubebuilder:validation:Optional
	ExcludedRule []ExcludedRuleParameters `json:"excludedRule,omitempty" tf:"excluded_rule,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	ScopeDownStatement []ScopeDownStatementParameters `json:"scopeDownStatement,omitempty" tf:"scope_down_statement,omitempty"`

	// +kubebuilder:validation:Required
	VendorName *string `json:"vendorName" tf:"vendor_name,omitempty"`
}

type NoneObservation struct {
}

type NoneParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []NotStatementStatementAndStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []NotStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []NotStatementStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []NotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []NotStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []NotStatementStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type NotStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type NotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type NotStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type NotStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []NotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type NotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type NotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type NotStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type NotStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []NotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []NotStatementStatementAndStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []NotStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []NotStatementStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []NotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []NotStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []NotStatementStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []NotStatementStatementAndStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []NotStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []NotStatementStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []NotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []NotStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []NotStatementStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type NotStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type NotStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []NotStatementStatementNotStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []NotStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []NotStatementStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []NotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []NotStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []NotStatementStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type NotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type NotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type NotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type NotStatementStatementNotStatementStatementNotStatementObservation struct {
}

type NotStatementStatementNotStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []NotStatementStatementNotStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type NotStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []NotStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type NotStatementStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type NotStatementStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []NotStatementStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type NotStatementStatementNotStatementStatementNotStatementStatementObservation struct {
}

type NotStatementStatementNotStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []NotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []NotStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []NotStatementStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []StatementNotStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []StatementNotStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []StatementNotStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type NotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type NotStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type NotStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementObservation struct {
}

type NotStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []NotStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []NotStatementStatementOrStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []StatementOrStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []StatementOrStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []StatementOrStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type NotStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type NotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type NotStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type NotStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []NotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type NotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type NotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type NotStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type NotStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []NotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []NotStatementStatementOrStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []NotStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []NotStatementStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []NotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []NotStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []NotStatementStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []NotStatementStatementOrStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []NotStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []NotStatementStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []NotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []NotStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []NotStatementStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []NotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []NotStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []NotStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []NotStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []NotStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []NotStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []NotStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type NotStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type NotStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type NotStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type NotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type NotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []OrStatementStatementAndStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []OrStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []OrStatementStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []OrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []OrStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []OrStatementStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type OrStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type OrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type OrStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type OrStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []OrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type OrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type OrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type OrStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type OrStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []OrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []OrStatementStatementAndStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []OrStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []OrStatementStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []OrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []OrStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []OrStatementStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []OrStatementStatementAndStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []OrStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []OrStatementStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []OrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []OrStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []OrStatementStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementAndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []OrStatementStatementNotStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []OrStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []OrStatementStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []OrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []OrStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []OrStatementStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []OrStatementStatementNotStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []OrStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []OrStatementStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []OrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []OrStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []OrStatementStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []OrStatementStatementNotStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []OrStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []OrStatementStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []OrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []OrStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []OrStatementStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementNotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []OrStatementStatementOrStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []OrStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []OrStatementStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []OrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []OrStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []OrStatementStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []OrStatementStatementOrStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []OrStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []OrStatementStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []OrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []OrStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []OrStatementStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []OrStatementStatementOrStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []OrStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []OrStatementStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []OrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []OrStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []OrStatementStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type OrStatementStatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type OverrideActionCountObservation struct {
}

type OverrideActionCountParameters struct {
}

type OverrideActionObservation struct {
}

type OverrideActionParameters struct {

	// +kubebuilder:validation:Optional
	Count []OverrideActionCountParameters `json:"count,omitempty" tf:"count,omitempty"`

	// +kubebuilder:validation:Optional
	None []NoneParameters `json:"none,omitempty" tf:"none,omitempty"`
}

type RateBasedStatementForwardedIPConfigObservation struct {
}

type RateBasedStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RateBasedStatementObservation struct {
}

type RateBasedStatementParameters struct {

	// +kubebuilder:validation:Optional
	AggregateKeyType *string `json:"aggregateKeyType,omitempty" tf:"aggregate_key_type,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RateBasedStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`

	// +kubebuilder:validation:Required
	Limit *float64 `json:"limit" tf:"limit,omitempty"`

	// +kubebuilder:validation:Optional
	ScopeDownStatement []RateBasedStatementScopeDownStatementParameters `json:"scopeDownStatement,omitempty" tf:"scope_down_statement,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RateBasedStatementScopeDownStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RateBasedStatementScopeDownStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RateBasedStatementScopeDownStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []RateBasedStatementScopeDownStatementAndStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RateBasedStatementScopeDownStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RateBasedStatementScopeDownStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []RateBasedStatementScopeDownStatementAndStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []RateBasedStatementScopeDownStatementAndStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementByteMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementByteMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RateBasedStatementScopeDownStatementGeoMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RateBasedStatementScopeDownStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RateBasedStatementScopeDownStatementIPSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RateBasedStatementScopeDownStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RateBasedStatementScopeDownStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RateBasedStatementScopeDownStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RateBasedStatementScopeDownStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []RateBasedStatementScopeDownStatementNotStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RateBasedStatementScopeDownStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RateBasedStatementScopeDownStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []RateBasedStatementScopeDownStatementNotStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []RateBasedStatementScopeDownStatementNotStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RateBasedStatementScopeDownStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RateBasedStatementScopeDownStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RateBasedStatementScopeDownStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []RateBasedStatementScopeDownStatementOrStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RateBasedStatementScopeDownStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RateBasedStatementScopeDownStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []RateBasedStatementScopeDownStatementOrStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []RateBasedStatementScopeDownStatementOrStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []RateBasedStatementScopeDownStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RateBasedStatementScopeDownStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RateBasedStatementScopeDownStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RateBasedStatementScopeDownStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []RateBasedStatementScopeDownStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []RateBasedStatementScopeDownStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RateBasedStatementScopeDownStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RateBasedStatementScopeDownStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RateBasedStatementScopeDownStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementObservation struct {
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementObservation struct {
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementSqliMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RateBasedStatementScopeDownStatementXSSMatchStatementObservation struct {
}

type RateBasedStatementScopeDownStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RateBasedStatementScopeDownStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RateBasedStatementScopeDownStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RateBasedStatementScopeDownStatementXSSMatchStatementTextTransformationObservation struct {
}

type RateBasedStatementScopeDownStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleActionObservation struct {
}

type RuleActionParameters struct {

	// +kubebuilder:validation:Optional
	Allow []ActionAllowParameters `json:"allow,omitempty" tf:"allow,omitempty"`

	// +kubebuilder:validation:Optional
	Block []ActionBlockParameters `json:"block,omitempty" tf:"block,omitempty"`

	// +kubebuilder:validation:Optional
	Count []ActionCountParameters `json:"count,omitempty" tf:"count,omitempty"`
}

type RuleGroupReferenceStatementExcludedRuleObservation struct {
}

type RuleGroupReferenceStatementExcludedRuleParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleGroupReferenceStatementObservation struct {
}

type RuleGroupReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludedRule []RuleGroupReferenceStatementExcludedRuleParameters `json:"excludedRule,omitempty" tf:"excluded_rule,omitempty"`
}

type RuleStatementAndStatementObservation struct {
}

type RuleStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RuleStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RuleStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RuleStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementAndStatementStatementByteMatchStatementObservation struct {
}

type RuleStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RuleStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RuleStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RuleStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type RuleStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RuleStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RuleStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RuleStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RuleStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type RuleStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RuleStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RuleStatementAndStatementStatementObservation struct {
}

type RuleStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []AndStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RuleStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RuleStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RuleStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []StatementAndStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []StatementAndStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RuleStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RuleStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RuleStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RuleStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RuleStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type RuleStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RuleStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type RuleStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RuleStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type RuleStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RuleStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementNotStatementObservation struct {
}

type RuleStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RuleStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RuleStatementNotStatementStatementAndStatementObservation struct {
}

type RuleStatementNotStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RuleStatementNotStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RuleStatementNotStatementStatementAndStatementStatementObservation struct {
}

type RuleStatementNotStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []NotStatementStatementAndStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []StatementNotStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []StatementNotStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []StatementNotStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []NotStatementStatementAndStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []NotStatementStatementAndStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []StatementNotStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []StatementNotStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []StatementNotStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RuleStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RuleStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementNotStatementStatementByteMatchStatementObservation struct {
}

type RuleStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RuleStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RuleStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RuleStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type RuleStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RuleStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RuleStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RuleStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RuleStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type RuleStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RuleStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementObservation struct {
}

type RuleStatementNotStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RuleStatementNotStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []StatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []StatementNotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []NotStatementStatementNotStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RuleStatementNotStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RuleStatementNotStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RuleStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []NotStatementStatementNotStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []StatementNotStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RuleStatementNotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementNotStatementStatementObservation struct {
}

type RuleStatementNotStatementStatementOrStatementObservation struct {
}

type RuleStatementNotStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RuleStatementNotStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RuleStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RuleStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []NotStatementStatementOrStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RuleStatementNotStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RuleStatementNotStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RuleStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []NotStatementStatementOrStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []NotStatementStatementOrStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RuleStatementNotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []RuleStatementNotStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RuleStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RuleStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RuleStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []RuleStatementNotStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []RuleStatementNotStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RuleStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RuleStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RuleStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RuleStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RuleStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type RuleStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RuleStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type RuleStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RuleStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type RuleStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RuleStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementObservation struct {
}

type RuleStatementOrStatementStatementAndStatementObservation struct {
}

type RuleStatementOrStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RuleStatementOrStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RuleStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RuleStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []OrStatementStatementAndStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RuleStatementOrStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RuleStatementOrStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RuleStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []OrStatementStatementAndStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []OrStatementStatementAndStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementObservation struct {
}

type RuleStatementOrStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RuleStatementOrStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RuleStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RuleStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []OrStatementStatementNotStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RuleStatementOrStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RuleStatementOrStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RuleStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []OrStatementStatementNotStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []OrStatementStatementNotStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementObservation struct {
}

type RuleStatementOrStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []RuleStatementOrStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []RuleStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []RuleStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []OrStatementStatementOrStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []RuleStatementOrStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []RuleStatementOrStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []RuleStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []OrStatementStatementOrStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []OrStatementStatementOrStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type RuleStatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []RuleStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []WebACLRuleStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []WebACLRuleStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []WebACLRuleStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ManagedRuleGroupStatement []ManagedRuleGroupStatementParameters `json:"managedRuleGroupStatement,omitempty" tf:"managed_rule_group_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []RuleStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []WebACLRuleStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RateBasedStatement []RateBasedStatementParameters `json:"rateBasedStatement,omitempty" tf:"rate_based_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []WebACLRuleStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RuleGroupReferenceStatement []RuleGroupReferenceStatementParameters `json:"ruleGroupReferenceStatement,omitempty" tf:"rule_group_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []WebACLRuleStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []WebACLRuleStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []WebACLRuleStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type RuleVisibilityConfigObservation struct {
}

type RuleVisibilityConfigParameters struct {

	// +kubebuilder:validation:Required
	CloudwatchMetricsEnabled *bool `json:"cloudwatchMetricsEnabled" tf:"cloudwatch_metrics_enabled,omitempty"`

	// +kubebuilder:validation:Required
	MetricName *string `json:"metricName" tf:"metric_name,omitempty"`

	// +kubebuilder:validation:Required
	SampledRequestsEnabled *bool `json:"sampledRequestsEnabled" tf:"sampled_requests_enabled,omitempty"`
}

type ScopeDownStatementAndStatementObservation struct {
}

type ScopeDownStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []ScopeDownStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []ScopeDownStatementAndStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []ScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []ScopeDownStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []ScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []ScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []ScopeDownStatementAndStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementByteMatchStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type ScopeDownStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type ScopeDownStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []ScopeDownStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type ScopeDownStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type ScopeDownStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type ScopeDownStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []ScopeDownStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []ScopeDownStatementAndStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []ScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []ScopeDownStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []ScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []ScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []ScopeDownStatementAndStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []ScopeDownStatementAndStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []ScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []ScopeDownStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []ScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []ScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []ScopeDownStatementAndStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []ScopeDownStatementAndStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []ScopeDownStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []ScopeDownStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []ScopeDownStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []ScopeDownStatementAndStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []ScopeDownStatementAndStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []ScopeDownStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []ScopeDownStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []ScopeDownStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementByteMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementByteMatchStatementObservation struct {
}

type ScopeDownStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementByteMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type ScopeDownStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type ScopeDownStatementGeoMatchStatementObservation struct {
}

type ScopeDownStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []ScopeDownStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type ScopeDownStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type ScopeDownStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type ScopeDownStatementIPSetReferenceStatementObservation struct {
}

type ScopeDownStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []ScopeDownStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type ScopeDownStatementNotStatementObservation struct {
}

type ScopeDownStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []ScopeDownStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []ScopeDownStatementNotStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []ScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []ScopeDownStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []ScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []ScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []ScopeDownStatementNotStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementByteMatchStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type ScopeDownStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type ScopeDownStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []ScopeDownStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type ScopeDownStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type ScopeDownStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type ScopeDownStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []ScopeDownStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []ScopeDownStatementNotStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []ScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []ScopeDownStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []ScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []ScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []ScopeDownStatementNotStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []ScopeDownStatementNotStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []ScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []ScopeDownStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []ScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []ScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []ScopeDownStatementNotStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []ScopeDownStatementNotStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []ScopeDownStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []ScopeDownStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []ScopeDownStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []ScopeDownStatementNotStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []ScopeDownStatementNotStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []ScopeDownStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []ScopeDownStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []ScopeDownStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementObservation struct {
}

type ScopeDownStatementOrStatementObservation struct {
}

type ScopeDownStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []ScopeDownStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []ScopeDownStatementOrStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []ScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []ScopeDownStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []ScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []ScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []ScopeDownStatementOrStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementByteMatchStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type ScopeDownStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type ScopeDownStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []ScopeDownStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type ScopeDownStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type ScopeDownStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type ScopeDownStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []ScopeDownStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []ScopeDownStatementOrStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []ScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []ScopeDownStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []ScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []ScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []ScopeDownStatementOrStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []ScopeDownStatementOrStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []ScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []ScopeDownStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []ScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []ScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []ScopeDownStatementOrStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []ScopeDownStatementOrStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []ScopeDownStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []ScopeDownStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []ScopeDownStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []ScopeDownStatementOrStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []ScopeDownStatementOrStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []ScopeDownStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []ScopeDownStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []ScopeDownStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []ScopeDownStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []ScopeDownStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []ScopeDownStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []ScopeDownStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []ScopeDownStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []ScopeDownStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []ScopeDownStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []ScopeDownStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []ScopeDownStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []ScopeDownStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementRegexPatternSetReferenceStatementObservation struct {
}

type ScopeDownStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type ScopeDownStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type ScopeDownStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementSizeConstraintStatementObservation struct {
}

type ScopeDownStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementSizeConstraintStatementTextTransformationObservation struct {
}

type ScopeDownStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementSqliMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementSqliMatchStatementObservation struct {
}

type ScopeDownStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementSqliMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type ScopeDownStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type ScopeDownStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type ScopeDownStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type ScopeDownStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type ScopeDownStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type ScopeDownStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type ScopeDownStatementXSSMatchStatementFieldToMatchObservation struct {
}

type ScopeDownStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []ScopeDownStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []ScopeDownStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []ScopeDownStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []ScopeDownStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []ScopeDownStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []ScopeDownStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []ScopeDownStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type ScopeDownStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type ScopeDownStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type ScopeDownStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type ScopeDownStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type ScopeDownStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type ScopeDownStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type ScopeDownStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type ScopeDownStatementXSSMatchStatementObservation struct {
}

type ScopeDownStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []ScopeDownStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []ScopeDownStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type ScopeDownStatementXSSMatchStatementTextTransformationObservation struct {
}

type ScopeDownStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementAndStatementObservation struct {
}

type StatementAndStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []StatementAndStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type StatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type StatementAndStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []StatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type StatementAndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type StatementAndStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []StatementAndStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementObservation struct {
}

type StatementAndStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []AndStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []AndStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []AndStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []AndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []AndStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []AndStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []AndStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementNotStatementObservation struct {
}

type StatementAndStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []StatementAndStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type StatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type StatementAndStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []StatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type StatementAndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type StatementAndStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []StatementAndStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementObservation struct {
}

type StatementAndStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []StatementNotStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []StatementAndStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []StatementAndStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []StatementAndStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []StatementNotStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []NotStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []StatementAndStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []StatementAndStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []StatementAndStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementOrStatementObservation struct {
}

type StatementAndStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []StatementAndStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type StatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type StatementAndStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []StatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type StatementAndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type StatementAndStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []StatementAndStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementObservation struct {
}

type StatementAndStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []StatementOrStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []StatementAndStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []StatementAndStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []StatementAndStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []StatementOrStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []StatementOrStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []StatementAndStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []StatementAndStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []StatementAndStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementAndStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementAndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type StatementAndStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementAndStatementObservation struct {
}

type StatementNotStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []StatementNotStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type StatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type StatementNotStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []StatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type StatementNotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type StatementNotStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []StatementNotStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementObservation struct {
}

type StatementNotStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []NotStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []NotStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []NotStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []NotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []NotStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []NotStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []NotStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementNotStatementObservation struct {
}

type StatementNotStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []StatementNotStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []NotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []NotStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type StatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type StatementNotStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []NotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type StatementNotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type StatementNotStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []NotStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementObservation struct {
}

type StatementNotStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []StatementNotStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []StatementNotStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []StatementNotStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []NotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []NotStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []NotStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []NotStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementOrStatementObservation struct {
}

type StatementNotStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []StatementNotStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type StatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type StatementNotStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []StatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type StatementNotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type StatementNotStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []StatementNotStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementObservation struct {
}

type StatementNotStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []StatementNotStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []StatementNotStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []StatementNotStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []StatementNotStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []StatementNotStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []StatementNotStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementNotStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementNotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type StatementNotStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementAndStatementObservation struct {
}

type StatementOrStatementStatementAndStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []StatementOrStatementStatementAndStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementObservation struct {
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type StatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementGeoMatchStatementObservation struct {
}

type StatementOrStatementStatementAndStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []StatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type StatementOrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementIPSetReferenceStatementObservation struct {
}

type StatementOrStatementStatementAndStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []StatementOrStatementStatementAndStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementObservation struct {
}

type StatementOrStatementStatementAndStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []OrStatementStatementAndStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []OrStatementStatementAndStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []OrStatementStatementAndStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []StatementOrStatementStatementAndStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []StatementOrStatementStatementAndStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []StatementOrStatementStatementAndStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementObservation struct {
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementAndStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementAndStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementNotStatementObservation struct {
}

type StatementOrStatementStatementNotStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []StatementOrStatementStatementNotStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementObservation struct {
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type StatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementGeoMatchStatementObservation struct {
}

type StatementOrStatementStatementNotStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []StatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type StatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementIPSetReferenceStatementObservation struct {
}

type StatementOrStatementStatementNotStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []StatementOrStatementStatementNotStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementObservation struct {
}

type StatementOrStatementStatementNotStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []StatementOrStatementStatementNotStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []StatementOrStatementStatementNotStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []StatementOrStatementStatementNotStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []StatementOrStatementStatementNotStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []StatementOrStatementStatementNotStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []StatementOrStatementStatementNotStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementObservation struct {
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementNotStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementNotStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementOrStatementObservation struct {
}

type StatementOrStatementStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []StatementOrStatementStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementObservation struct {
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type StatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type StatementOrStatementStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []StatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type StatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type StatementOrStatementStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []StatementOrStatementStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementObservation struct {
}

type StatementOrStatementStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	ByteMatchStatement []StatementOrStatementStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []StatementOrStatementStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []StatementOrStatementStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []StatementOrStatementStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []StatementOrStatementStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []StatementOrStatementStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []OrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []StatementOrStatementStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []StatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type StatementOrStatementStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type WebACLObservation struct {
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	Capacity *float64 `json:"capacity,omitempty" tf:"capacity,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	LockToken *string `json:"lockToken,omitempty" tf:"lock_token,omitempty"`

	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`
}

type WebACLParameters struct {

	// +kubebuilder:validation:Required
	DefaultAction []DefaultActionParameters `json:"defaultAction" tf:"default_action,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// +kubebuilder:validation:Optional
	Rule []WebACLRuleParameters `json:"rule,omitempty" tf:"rule,omitempty"`

	// +kubebuilder:validation:Required
	Scope *string `json:"scope" tf:"scope,omitempty"`

	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// +kubebuilder:validation:Required
	VisibilityConfig []WebACLVisibilityConfigParameters `json:"visibilityConfig" tf:"visibility_config,omitempty"`
}

type WebACLRuleObservation struct {
}

type WebACLRuleParameters struct {

	// +kubebuilder:validation:Optional
	Action []RuleActionParameters `json:"action,omitempty" tf:"action,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	OverrideAction []OverrideActionParameters `json:"overrideAction,omitempty" tf:"override_action,omitempty"`

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Statement []RuleStatementParameters `json:"statement" tf:"statement,omitempty"`

	// +kubebuilder:validation:Required
	VisibilityConfig []RuleVisibilityConfigParameters `json:"visibilityConfig" tf:"visibility_config,omitempty"`
}

type WebACLRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type WebACLRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type WebACLRuleStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type WebACLRuleStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type WebACLRuleStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type WebACLRuleStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type WebACLRuleStatementByteMatchStatementFieldToMatchObservation struct {
}

type WebACLRuleStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []WebACLRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []WebACLRuleStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []WebACLRuleStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []WebACLRuleStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []WebACLRuleStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []WebACLRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []WebACLRuleStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type WebACLRuleStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type WebACLRuleStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type WebACLRuleStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type WebACLRuleStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type WebACLRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type WebACLRuleStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type WebACLRuleStatementByteMatchStatementObservation struct {
}

type WebACLRuleStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []WebACLRuleStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []WebACLRuleStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type WebACLRuleStatementByteMatchStatementTextTransformationObservation struct {
}

type WebACLRuleStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type WebACLRuleStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type WebACLRuleStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type WebACLRuleStatementGeoMatchStatementObservation struct {
}

type WebACLRuleStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []WebACLRuleStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type WebACLRuleStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type WebACLRuleStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type WebACLRuleStatementIPSetReferenceStatementObservation struct {
}

type WebACLRuleStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []WebACLRuleStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type WebACLRuleStatementOrStatementObservation struct {
}

type WebACLRuleStatementOrStatementParameters struct {

	// +kubebuilder:validation:Required
	Statement []WebACLRuleStatementOrStatementStatementParameters `json:"statement" tf:"statement,omitempty"`
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchBodyObservation struct {
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters struct {
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchMethodObservation struct {
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters struct {
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchObservation struct {
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringObservation struct {
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchQueryStringParameters struct {
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathObservation struct {
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchURIPathParameters struct {
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementObservation struct {
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []WebACLRuleStatementOrStatementStatementByteMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	PositionalConstraint *string `json:"positionalConstraint" tf:"positional_constraint,omitempty"`

	// +kubebuilder:validation:Required
	SearchString *string `json:"searchString" tf:"search_string,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []WebACLRuleStatementOrStatementStatementByteMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementTextTransformationObservation struct {
}

type WebACLRuleStatementOrStatementStatementByteMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type WebACLRuleStatementOrStatementStatementGeoMatchStatementForwardedIPConfigObservation struct {
}

type WebACLRuleStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`
}

type WebACLRuleStatementOrStatementStatementGeoMatchStatementObservation struct {
}

type WebACLRuleStatementOrStatementStatementGeoMatchStatementParameters struct {

	// +kubebuilder:validation:Required
	CountryCodes []*string `json:"countryCodes" tf:"country_codes,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardedIPConfig []WebACLRuleStatementOrStatementStatementGeoMatchStatementForwardedIPConfigParameters `json:"forwardedIpConfig,omitempty" tf:"forwarded_ip_config,omitempty"`
}

type WebACLRuleStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigObservation struct {
}

type WebACLRuleStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters struct {

	// +kubebuilder:validation:Required
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior,omitempty"`

	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

type WebACLRuleStatementOrStatementStatementIPSetReferenceStatementObservation struct {
}

type WebACLRuleStatementOrStatementStatementIPSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetForwardedIPConfig []WebACLRuleStatementOrStatementStatementIPSetReferenceStatementIPSetForwardedIPConfigParameters `json:"ipSetForwardedIpConfig,omitempty" tf:"ip_set_forwarded_ip_config,omitempty"`
}

type WebACLRuleStatementOrStatementStatementObservation struct {
}

type WebACLRuleStatementOrStatementStatementParameters struct {

	// +kubebuilder:validation:Optional
	AndStatement []RuleStatementOrStatementStatementAndStatementParameters `json:"andStatement,omitempty" tf:"and_statement,omitempty"`

	// +kubebuilder:validation:Optional
	ByteMatchStatement []WebACLRuleStatementOrStatementStatementByteMatchStatementParameters `json:"byteMatchStatement,omitempty" tf:"byte_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatchStatement []WebACLRuleStatementOrStatementStatementGeoMatchStatementParameters `json:"geoMatchStatement,omitempty" tf:"geo_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	IPSetReferenceStatement []WebACLRuleStatementOrStatementStatementIPSetReferenceStatementParameters `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	NotStatement []RuleStatementOrStatementStatementNotStatementParameters `json:"notStatement,omitempty" tf:"not_statement,omitempty"`

	// +kubebuilder:validation:Optional
	OrStatement []RuleStatementOrStatementStatementOrStatementParameters `json:"orStatement,omitempty" tf:"or_statement,omitempty"`

	// +kubebuilder:validation:Optional
	RegexPatternSetReferenceStatement []WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementParameters `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SizeConstraintStatement []WebACLRuleStatementOrStatementStatementSizeConstraintStatementParameters `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement,omitempty"`

	// +kubebuilder:validation:Optional
	SqliMatchStatement []WebACLRuleStatementOrStatementStatementSqliMatchStatementParameters `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement,omitempty"`

	// +kubebuilder:validation:Optional
	XSSMatchStatement []WebACLRuleStatementOrStatementStatementXSSMatchStatementParameters `json:"xssMatchStatement,omitempty" tf:"xss_match_statement,omitempty"`
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementObservation struct {
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type WebACLRuleStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementObservation struct {
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []WebACLRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []WebACLRuleStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementTextTransformationObservation struct {
}

type WebACLRuleStatementOrStatementStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchObservation struct {
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementObservation struct {
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []WebACLRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []WebACLRuleStatementOrStatementStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementTextTransformationObservation struct {
}

type WebACLRuleStatementOrStatementStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchObservation struct {
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementObservation struct {
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []WebACLRuleStatementOrStatementStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []WebACLRuleStatementOrStatementStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementTextTransformationObservation struct {
}

type WebACLRuleStatementOrStatementStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyObservation struct {
}

type WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters struct {
}

type WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodObservation struct {
}

type WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters struct {
}

type WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchObservation struct {
}

type WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringObservation struct {
}

type WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringParameters struct {
}

type WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderObservation struct {
}

type WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchURIPathObservation struct {
}

type WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchURIPathParameters struct {
}

type WebACLRuleStatementRegexPatternSetReferenceStatementObservation struct {
}

type WebACLRuleStatementRegexPatternSetReferenceStatementParameters struct {

	// +kubebuilder:validation:Required
	Arn *string `json:"arn" tf:"arn,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []WebACLRuleStatementRegexPatternSetReferenceStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []WebACLRuleStatementRegexPatternSetReferenceStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type WebACLRuleStatementRegexPatternSetReferenceStatementTextTransformationObservation struct {
}

type WebACLRuleStatementRegexPatternSetReferenceStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type WebACLRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type WebACLRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type WebACLRuleStatementSizeConstraintStatementFieldToMatchBodyObservation struct {
}

type WebACLRuleStatementSizeConstraintStatementFieldToMatchBodyParameters struct {
}

type WebACLRuleStatementSizeConstraintStatementFieldToMatchMethodObservation struct {
}

type WebACLRuleStatementSizeConstraintStatementFieldToMatchMethodParameters struct {
}

type WebACLRuleStatementSizeConstraintStatementFieldToMatchObservation struct {
}

type WebACLRuleStatementSizeConstraintStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []WebACLRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []WebACLRuleStatementSizeConstraintStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []WebACLRuleStatementSizeConstraintStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []WebACLRuleStatementSizeConstraintStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []WebACLRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []WebACLRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []WebACLRuleStatementSizeConstraintStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type WebACLRuleStatementSizeConstraintStatementFieldToMatchQueryStringObservation struct {
}

type WebACLRuleStatementSizeConstraintStatementFieldToMatchQueryStringParameters struct {
}

type WebACLRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderObservation struct {
}

type WebACLRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type WebACLRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementSizeConstraintStatementFieldToMatchURIPathObservation struct {
}

type WebACLRuleStatementSizeConstraintStatementFieldToMatchURIPathParameters struct {
}

type WebACLRuleStatementSizeConstraintStatementObservation struct {
}

type WebACLRuleStatementSizeConstraintStatementParameters struct {

	// +kubebuilder:validation:Required
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator,omitempty"`

	// +kubebuilder:validation:Optional
	FieldToMatch []WebACLRuleStatementSizeConstraintStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []WebACLRuleStatementSizeConstraintStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type WebACLRuleStatementSizeConstraintStatementTextTransformationObservation struct {
}

type WebACLRuleStatementSizeConstraintStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type WebACLRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type WebACLRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type WebACLRuleStatementSqliMatchStatementFieldToMatchBodyObservation struct {
}

type WebACLRuleStatementSqliMatchStatementFieldToMatchBodyParameters struct {
}

type WebACLRuleStatementSqliMatchStatementFieldToMatchMethodObservation struct {
}

type WebACLRuleStatementSqliMatchStatementFieldToMatchMethodParameters struct {
}

type WebACLRuleStatementSqliMatchStatementFieldToMatchObservation struct {
}

type WebACLRuleStatementSqliMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []WebACLRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []WebACLRuleStatementSqliMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []WebACLRuleStatementSqliMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []WebACLRuleStatementSqliMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []WebACLRuleStatementSqliMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []WebACLRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []WebACLRuleStatementSqliMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type WebACLRuleStatementSqliMatchStatementFieldToMatchQueryStringObservation struct {
}

type WebACLRuleStatementSqliMatchStatementFieldToMatchQueryStringParameters struct {
}

type WebACLRuleStatementSqliMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type WebACLRuleStatementSqliMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type WebACLRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementSqliMatchStatementFieldToMatchURIPathObservation struct {
}

type WebACLRuleStatementSqliMatchStatementFieldToMatchURIPathParameters struct {
}

type WebACLRuleStatementSqliMatchStatementObservation struct {
}

type WebACLRuleStatementSqliMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []WebACLRuleStatementSqliMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []WebACLRuleStatementSqliMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type WebACLRuleStatementSqliMatchStatementTextTransformationObservation struct {
}

type WebACLRuleStatementSqliMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type WebACLRuleStatementXSSMatchStatementFieldToMatchAllQueryArgumentsObservation struct {
}

type WebACLRuleStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters struct {
}

type WebACLRuleStatementXSSMatchStatementFieldToMatchBodyObservation struct {
}

type WebACLRuleStatementXSSMatchStatementFieldToMatchBodyParameters struct {
}

type WebACLRuleStatementXSSMatchStatementFieldToMatchMethodObservation struct {
}

type WebACLRuleStatementXSSMatchStatementFieldToMatchMethodParameters struct {
}

type WebACLRuleStatementXSSMatchStatementFieldToMatchObservation struct {
}

type WebACLRuleStatementXSSMatchStatementFieldToMatchParameters struct {

	// +kubebuilder:validation:Optional
	AllQueryArguments []WebACLRuleStatementXSSMatchStatementFieldToMatchAllQueryArgumentsParameters `json:"allQueryArguments,omitempty" tf:"all_query_arguments,omitempty"`

	// +kubebuilder:validation:Optional
	Body []WebACLRuleStatementXSSMatchStatementFieldToMatchBodyParameters `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	Method []WebACLRuleStatementXSSMatchStatementFieldToMatchMethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	QueryString []WebACLRuleStatementXSSMatchStatementFieldToMatchQueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// +kubebuilder:validation:Optional
	SingleHeader []WebACLRuleStatementXSSMatchStatementFieldToMatchSingleHeaderParameters `json:"singleHeader,omitempty" tf:"single_header,omitempty"`

	// +kubebuilder:validation:Optional
	SingleQueryArgument []WebACLRuleStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters `json:"singleQueryArgument,omitempty" tf:"single_query_argument,omitempty"`

	// +kubebuilder:validation:Optional
	URIPath []WebACLRuleStatementXSSMatchStatementFieldToMatchURIPathParameters `json:"uriPath,omitempty" tf:"uri_path,omitempty"`
}

type WebACLRuleStatementXSSMatchStatementFieldToMatchQueryStringObservation struct {
}

type WebACLRuleStatementXSSMatchStatementFieldToMatchQueryStringParameters struct {
}

type WebACLRuleStatementXSSMatchStatementFieldToMatchSingleHeaderObservation struct {
}

type WebACLRuleStatementXSSMatchStatementFieldToMatchSingleHeaderParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementXSSMatchStatementFieldToMatchSingleQueryArgumentObservation struct {
}

type WebACLRuleStatementXSSMatchStatementFieldToMatchSingleQueryArgumentParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type WebACLRuleStatementXSSMatchStatementFieldToMatchURIPathObservation struct {
}

type WebACLRuleStatementXSSMatchStatementFieldToMatchURIPathParameters struct {
}

type WebACLRuleStatementXSSMatchStatementObservation struct {
}

type WebACLRuleStatementXSSMatchStatementParameters struct {

	// +kubebuilder:validation:Optional
	FieldToMatch []WebACLRuleStatementXSSMatchStatementFieldToMatchParameters `json:"fieldToMatch,omitempty" tf:"field_to_match,omitempty"`

	// +kubebuilder:validation:Required
	TextTransformation []WebACLRuleStatementXSSMatchStatementTextTransformationParameters `json:"textTransformation" tf:"text_transformation,omitempty"`
}

type WebACLRuleStatementXSSMatchStatementTextTransformationObservation struct {
}

type WebACLRuleStatementXSSMatchStatementTextTransformationParameters struct {

	// +kubebuilder:validation:Required
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type WebACLVisibilityConfigObservation struct {
}

type WebACLVisibilityConfigParameters struct {

	// +kubebuilder:validation:Required
	CloudwatchMetricsEnabled *bool `json:"cloudwatchMetricsEnabled" tf:"cloudwatch_metrics_enabled,omitempty"`

	// +kubebuilder:validation:Required
	MetricName *string `json:"metricName" tf:"metric_name,omitempty"`

	// +kubebuilder:validation:Required
	SampledRequestsEnabled *bool `json:"sampledRequestsEnabled" tf:"sampled_requests_enabled,omitempty"`
}

// WebACLSpec defines the desired state of WebACL
type WebACLSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WebACLParameters `json:"forProvider"`
}

// WebACLStatus defines the observed state of WebACL.
type WebACLStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WebACLObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// WebACL is the Schema for the WebACLs API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,awsjet}
type WebACL struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              WebACLSpec   `json:"spec"`
	Status            WebACLStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WebACLList contains a list of WebACLs
type WebACLList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WebACL `json:"items"`
}

// Repository type metadata.
var (
	WebACL_Kind             = "WebACL"
	WebACL_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WebACL_Kind}.String()
	WebACL_KindAPIVersion   = WebACL_Kind + "." + CRDGroupVersion.String()
	WebACL_GroupVersionKind = CRDGroupVersion.WithKind(WebACL_Kind)
)

func init() {
	SchemeBuilder.Register(&WebACL{}, &WebACLList{})
}
