/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type NetworkInterfaceSgAttachmentObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type NetworkInterfaceSgAttachmentParameters struct {

	// +kubebuilder:validation:Required
	NetworkInterfaceID *string `json:"networkInterfaceId" tf:"network_interface_id,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-jet-aws/apis/ec2/v1alpha2.SecurityGroup
	// +kubebuilder:validation:Optional
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// +kubebuilder:validation:Optional
	SecurityGroupIDRef *v1.Reference `json:"securityGroupIdRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	SecurityGroupIDSelector *v1.Selector `json:"securityGroupIdSelector,omitempty" tf:"-"`
}

// NetworkInterfaceSgAttachmentSpec defines the desired state of NetworkInterfaceSgAttachment
type NetworkInterfaceSgAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NetworkInterfaceSgAttachmentParameters `json:"forProvider"`
}

// NetworkInterfaceSgAttachmentStatus defines the observed state of NetworkInterfaceSgAttachment.
type NetworkInterfaceSgAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NetworkInterfaceSgAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// NetworkInterfaceSgAttachment is the Schema for the NetworkInterfaceSgAttachments API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,awsjet}
type NetworkInterfaceSgAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NetworkInterfaceSgAttachmentSpec   `json:"spec"`
	Status            NetworkInterfaceSgAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NetworkInterfaceSgAttachmentList contains a list of NetworkInterfaceSgAttachments
type NetworkInterfaceSgAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NetworkInterfaceSgAttachment `json:"items"`
}

// Repository type metadata.
var (
	NetworkInterfaceSgAttachment_Kind             = "NetworkInterfaceSgAttachment"
	NetworkInterfaceSgAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NetworkInterfaceSgAttachment_Kind}.String()
	NetworkInterfaceSgAttachment_KindAPIVersion   = NetworkInterfaceSgAttachment_Kind + "." + CRDGroupVersion.String()
	NetworkInterfaceSgAttachment_GroupVersionKind = CRDGroupVersion.WithKind(NetworkInterfaceSgAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&NetworkInterfaceSgAttachment{}, &NetworkInterfaceSgAttachmentList{})
}
