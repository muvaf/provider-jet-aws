/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VPCEndpointRouteTableAssociationObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type VPCEndpointRouteTableAssociationParameters struct {

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// +kubebuilder:validation:Required
	RouteTableID *string `json:"routeTableId" tf:"route_table_id,omitempty"`

	// +kubebuilder:validation:Required
	VPCEndpointID *string `json:"vpcEndpointId" tf:"vpc_endpoint_id,omitempty"`
}

// VPCEndpointRouteTableAssociationSpec defines the desired state of VPCEndpointRouteTableAssociation
type VPCEndpointRouteTableAssociationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VPCEndpointRouteTableAssociationParameters `json:"forProvider"`
}

// VPCEndpointRouteTableAssociationStatus defines the observed state of VPCEndpointRouteTableAssociation.
type VPCEndpointRouteTableAssociationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VPCEndpointRouteTableAssociationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// VPCEndpointRouteTableAssociation is the Schema for the VPCEndpointRouteTableAssociations API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,awsjet}
type VPCEndpointRouteTableAssociation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VPCEndpointRouteTableAssociationSpec   `json:"spec"`
	Status            VPCEndpointRouteTableAssociationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VPCEndpointRouteTableAssociationList contains a list of VPCEndpointRouteTableAssociations
type VPCEndpointRouteTableAssociationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VPCEndpointRouteTableAssociation `json:"items"`
}

// Repository type metadata.
var (
	VPCEndpointRouteTableAssociation_Kind             = "VPCEndpointRouteTableAssociation"
	VPCEndpointRouteTableAssociation_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VPCEndpointRouteTableAssociation_Kind}.String()
	VPCEndpointRouteTableAssociation_KindAPIVersion   = VPCEndpointRouteTableAssociation_Kind + "." + CRDGroupVersion.String()
	VPCEndpointRouteTableAssociation_GroupVersionKind = CRDGroupVersion.WithKind(VPCEndpointRouteTableAssociation_Kind)
)

func init() {
	SchemeBuilder.Register(&VPCEndpointRouteTableAssociation{}, &VPCEndpointRouteTableAssociationList{})
}
